name: CMake

on:
  push:
    branches:
      - 'main'
      - 'develop'
    tags:
  pull_request:

env:
  BUILD_TYPE: Release

jobs:
  build_linux:
    name: Build on linux
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Conan install and usage
        run: |
          pip3 install conan
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan install ${{github.workspace}}/conan/conanfile.txt --install-folder=${{github.workspace}}/deps --build=missing

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - run: |
          ls -a
          pwd

      - name: Tar files
        run: tar -cvf tarball.tar -C ${{github.workspace}}/build .

      - name: Upload artifacts for a ${{ github.job }} job
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}}_artifact
          path: tarball.tar


  # conan profile update settings.compiler.cppstd=17 default
  #  build_macos:
  #    name: Build on macOS
  #    runs-on: macos-11
  #    steps:
  #      - uses: actions/checkout@v2
  #
  #      - name: Conan install and usage
  #        run: |
  #          pip3 install conan
  #          conan profile new default --detect
  #          conan install ${{github.workspace}}/conan/conanfile.txt --install-folder=${{github.workspace}}/deps --build=missing
  #
  #      - name: Configure CMake
  #        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
  #
  #      - name: Build
  #        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
  #
  #      - name: Upload artifacts for a ${{ github.job }} job
  #        uses: actions/upload-artifact@v2
  #        with:
  #          name: ${{github.job}}_artifact
  #          path:
  #            - ${{github.workspace}}/build
  #            - ${{github.workspace}}/${{env.BUILD_TYPE}}
  #
  #  build_windows:
  #    name: Build on Windows
  #    runs-on: windows-2019
  #    steps:
  #      - uses: actions/checkout@v2
  #
  #      - name: Conan install and usage
  #        run: |
  #          pip3 install conan
  #          conan profile new default --detect
  #          conan profile update settings.compiler.runtime=MD default
  #          conan install ${{github.workspace}}/conan/conanfile.txt --install-folder=${{github.workspace}}/deps --build=missing
  #
  #      - name: Configure CMake
  #        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
  #
  #      - name: Build
  #        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
  #
  #      - name: Upload artifacts for a ${{ github.job }} job
  #        uses: actions/upload-artifact@v2
  #        with:
  #          name: ${{github.job}}_artifact
  #          path:
  #            - ${{github.workspace}}/build
  #            - ${{github.workspace}}/${{env.BUILD_TYPE}}

  test_linux:
    name: Test on linux
    runs-on: ubuntu-20.04
    needs: build_linux
    steps:
      - name: Download artifacts for a ${{ github.job }} job
        uses: actions/download-artifact@v2
        with:
          name: build_linux_artifact
          path: ./build

      - run: |
          ls -a
          pwd

      - name: Untar files
        working-directory: ${{github.workspace}}/build
        run: tar -xvf tarball.tar

      - run: |
          ls -a
          pwd

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

#  test_macos:
#    name: Test on macOS
#    runs-on: macos-11
#    needs: build_macos
#    steps:
#      - name: Download artifacts for a ${{ github.job }} job
#        uses: actions/download-artifact@v2
#        with:
#          name: build_macos_artifact
#      - run: ls -a
#      - name: Test
#        run: ctest -C ${{env.BUILD_TYPE}}
#
#  test_windows:
#    name: Test on windows
#    runs-on: windows-2019
#    needs: build_windows
#    steps:
#      - name: Download artifacts for a ${{ github.job }} job
#        uses: actions/download-artifact@v2
#        with:
#          name: build_windows_artifact
#      - name: Test
#        run: ctest -C ${{env.BUILD_TYPE}}
