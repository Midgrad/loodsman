name: Build and test

on:
  push:
    branches:
      - 'main'
      - 'develop'
    tags:
  pull_request:

env:
  BUILD_TYPE: Release

jobs:
  build_linux:
    name: Build on linux
    runs-on: &ubuntu ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Conan install
        run: &conan_install pip3 install conan

      - name: Conan profile detect
        run: &conan_detect conan profile new default --detect

      - name: Conan apply os-specific settings
        run: conan profile update settings.compiler.libcxx=libstdc++11 default

      - name: Conan install dependencies
        run: &conan_install conan install ${{github.workspace}}/conan/conanfile.txt --install-folder=${{github.workspace}}/deps --build=missing

      - name: Configure CMake
        run: &configure cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: &build cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Tar files
        run: &tar tar -cvf tarball.tar -C ${{github.workspace}}/build .

      - name: Upload artifacts for a ${{ github.job }} job
        uses: actions/upload-artifact@v2
        with: &upload_with
          name: ${{github.job}}_artifact
          path: tarball.tar

  build_macos:
    name: Build on macOS
    runs-on: &macos macos-11
    steps:
      - uses: actions/checkout@v2

      - name: Conan install
        run: *conan_install

      - name: Conan profile detect
        run: *conan_detect

      - name: Conan install dependencies
        run: *conan_install

      - name: Configure CMake
        run: *configure

      - name: Build
        run: *build

      - name: Tar files
        run: *tar

      - name: Upload artifacts for a ${{ github.job }} job
        uses: actions/upload-artifact@v2
        <<: *upload_with

  build_windows:
    name: Build on Windows
    runs-on: &windows windows-2019
    steps:
      - uses: actions/checkout@v2

      - name: Conan install
        run: *conan_install

      - name: Conan profile detect
        run: *conan_detect

      - name: Conan apply os-specific settings
        run: conan profile update settings.compiler.runtime=MD default

      - name: Conan install dependencies
        run: *conan_install

      - name: Configure CMake
        run: *configure

      - name: Build
        run: *build

      - name: Tar files
        run: *tar

      - name: Upload artifacts for a ${{ github.job }} job
        uses: actions/upload-artifact@v2
        <<: *upload_with

  test_linux:
    name: Test on linux
    runs-on: *ubuntu
    needs: build_linux
    steps:
      - name: Download artifacts for a ${{ github.job }} job
        uses: actions/download-artifact@v2
        with:
          name: build_linux_artifact
          path: ./build

      - name: Untar files
        working-directory: &build_directory ${{github.workspace}}/build
        run: &untar tar -xvf tarball.tar

      - name: Test
        working-directory: *build_directory
        run: &ctest ctest -C ${{env.BUILD_TYPE}}

  test_macos:
    name: Test on macOS
    runs-on: macos-11
    needs: build_macos
    steps:
      - name: Download artifacts for a ${{ github.job }} job
        uses: actions/download-artifact@v2
        with:
          name: build_macos_artifact
          path: ./build

      - name: Untar files
        working-directory: *build_directory
        run: *untar

      - name: Test
        working-directory: *build_directory
        run: *ctest

  test_windows:
    name: Test on windows
    runs-on: windows-2019
    needs: build_windows
    steps:
      - name: Download artifacts for a ${{ github.job }} job
        uses: actions/download-artifact@v2
        with:
          name: build_windows_artifact
          path: ./build

      - name: Test
        working-directory: *build_directory
        run: *ctest
